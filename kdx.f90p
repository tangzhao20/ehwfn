! This subroutine calculate the exceptation value of Kx or Kd, i.e.,
! <S|Kx|S> = Sum_(cvkc`v`k`)(AcvkS Ac`v`k`S* Kx_cvkc`v`k`) 
! <S|Kd|S> = Sum_(cvkc`v`k`)(AcvkS Ac`v`k`S* Kd_cvkc`v`k`) 

! write the code for <Kd> first

program kxd
  use typedefs
  use nrtype
  implicit none
  integer :: ns, nv, nc, nk_c, nk_f
  integer :: ie, ik, ic, iv, is, ib, ivp, icp, isp, ikc, ikf
  logical :: lbreak
#ifdef CPLX
  complex(dpc), allocatable :: Ae(:,:,:,:) ! ns, nv, nc, nk
#else
  real(dp), allocatable :: Ae(:,:,:,:) ! ns, nv, nc, nk
#endif
  real(dp), allocatable :: Ae_rk(:,:,:,:) ! ns, nv, nc, nrk
  real(dp), allocatable :: Abk2(:,:)! nc+nv, noutk
  real(dp), allocatable :: kk(:,:) ! 3, nk
  real(dp), allocatable :: outx(:) ! noutk
  integer, allocatable :: outind(:) ! noutk
  real(dp), allocatable :: eqp(:,:) ! nc+nv, nbsk
#ifdef CPLX 
  complex(dpc), allocatable :: bsedmatrix(:,:,:,:,:,:,:) ! nv,nc,nvp,ncp,ns,nsp,nkc
#else
  real(dp), allocatable :: bsedmatrix(:,:,:,:,:,:,:) ! nv,nc,nvp,ncp,ns,nsp,nkc
  
  real(dp) :: kp(3), d1, d2, somefloat, ef
  type(joblist) :: jobs
  type(kernel_header_t) :: kd, kx
  integer :: ierr, someint
  character(len=80) :: filename
  character(len=80) :: something
  character(len=11) :: cdate
  character(len=14) :: ctime

  open(unit=881,file="out.dat",status="replace")
  call date_time(cdate, ctime)
  write(881,'(a,a11,1x,a14)') " Start Time: ", cdate, ctime

  call readin(jobs)

  open(unit=11,file='bsedmat',form='unformatted',status='old')
!  open(unit=12,file='bsexmat',form='unformatted',status='old')

  ! mf header
  write(881,*)
  read(11) ! version, stitle, sdate_, stime_ ! try to read version a first time
  read(11) ! ns, ng, ntran, cell_symmetry, nat, ecutrho
  read(11) ! (FFTgrid(ii), ii = 1, 3)
  read(11) ! celvol, alat, ((avec(jj, ii), jj = 1, 3), ii = 1, 3), ((adot(jj, ii), jj = 1, 3), ii = 1, 3)
  read(11) ! recvol, blat, ((bvec(jj, ii), jj = 1, 3), ii = 1, 3), ((bdot(jj, ii), jj = 1, 3), ii = 1, 3)
!  mtrx(:,:,:) = 0
!  tnp(:,:) = 0d0
  read(11) ! (((mtrx(ii, jj, itran), ii = 1, 3), jj = 1, 3), itran = 1, ntran)
  read(11) ! ((tnp(jj, itran), jj = 1, 3), itran = 1, ntran)
!  allocate (atyp(nat))
!  allocate (apos(3, nat))
  read(11) ! ((apos(ii, iat), ii = 1, 3), atyp(iat), iat = 1, nat)
  !kd%gvec%nFFTgridpts = product(gvec%FFTgrid(1:3))
  write(881,*) "finished reading mf header from kernel files"

  ! General information
  read(11) kd%iscreen, kd%icutv, kd%ecuts
  ! Variables specific to kernel files: kpts
  read(11) kd%nk
  allocate(kd%kpts (3,kd%nk))
  do ik = 1, kd%nk
    read(11) kd%kpts(1:3, ik)
  enddo
  ! Variables specific to kernel files: everything else
  read(11) kd%ns, kd%nspinor, kd%nvb, kd%ncb, kd%n1b, kd%n2b
  read(11) kd%theory, kd%nmat, kd%storage, kd%nblocks
  ! Empty records
  read(11)
  read(11)
  read(11)
  read(11)
  read(11)
  write(881,*) "kd%nmat=", kd%nmat
  write(881,*) "kd%nvb=", kd%nvb
  write(881,*) "kd%ncb=", kd%ncb
  write(881,*) "kd%n1b=", kd%n1b
  write(881,*) "kd%n2b=", kd%n2b
  write(881,*) "finished reading kernel header from kernel files"

! Read in coarse matrices: head, wings, body, exchange

!  do jj=1, xct%n2b_co * xct%n1b_co
!    read(ifile) ikp,icp,ivp,(((((bsedmatrix(jv,jc,jvp,jcp,js,jsp,jk), jsp=1,xct%nspin),js=1,xct%nspin),jv=1,xct%n1b_co), jc=1,xct%n2b_co),jk=1,xct%nkpt_co)
!  enddo
  close(11)
!  close(12)

  call date_time(cdate, ctime)
  write(881,'(a,a11,1x,a14)') " End Time: ", cdate, ctime
  close(881)

endprogram kxd
